theme = "sonokai_ips"

[editor]
scrolloff = 10
color-modes = true
line-number = "relative"
bufferline = "always"
cursorline = true
cursorcolumn = true
auto-pairs = true
true-color = true
shell = ["zsh", "-c"]
jump-label-alphabet = "jfkdls;aurieowpqnvmcxz"

[editor.statusline]
left = [
  "mode",
  "spinner",
  "version-control",
  "file-name",
  "read-only-indicator",
  "file-modification-indicator",
]
right = [
  "diagnostics",
  "selections",
  "register",
  "position",
  "position-percentage",
  "total-line-numbers",
  "file-encoding",
  "file-line-ending",
  "file-type",
]
mode.normal = "NORMAL"
mode.insert = "INSERT"
mode.select = "VISUAL"

[editor.file-picker]
hidden = false

[editor.lsp]
enable = true
snippets = true

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "block"

[editor.soft-wrap]
enable = true

[editor.indent-guides]
render = true
character = "â”Š"
skip-levels = 1

[keys.normal]
# Common
"esc" = ["collapse_selection", "normal_mode"]
# Jump between selected word next and prev
# for * (Star key) remapped from search_selection_detect_word_boundaries to automatic select and go to next search
# "*" = [
#   "move_char_right",
#   "move_prev_word_start",
#   "move_next_word_end",
#   "search_selection",
#   "search_next",
# ]
# "#" = [
#   "move_char_right",
#   "move_prev_word_start",
#   "move_next_word_end",
#   "search_selection",
#   "search_prev",
# ]

# Jump between paragraph
"}" = "goto_next_paragraph"
"{" = "goto_prev_paragraph"

# Common control
# Remap original CTRL+s Save the current selection to the jumplist to format and Save files 
"C-s" = [":write"]
"C-j" = "jump_view_down"
"C-k" = "jump_view_up"
"C-h" = "jump_view_left"
"C-l" = "jump_view_right"
"C-g" = [":new", ":insert-output lazygit", ":buffer-close!", ":redraw"]
"C-r" = ":reload"
"C-e" = [
  ':sh rm -f /tmp/unique-file',
  ':insert-output yazi "$(dirname "%{buffer_name}:-.")" --chooser-file=/tmp/unique-file',
  ':insert-output echo "\x1b[?1049h\x1b[?2004h" > /dev/tty',
  ':open %sh{cat /tmp/unique-file}',
  ':redraw',
]

# Yank to system clipboard
"y" = ["yank", ":clipboard-yank", "collapse_selection"]
"Y" = ["extend_to_line_bounds", "yank", ":clipboard-yank", "collapse_selection"]
"D" = ["extend_to_line_bounds", "yank", ":clipboard-yank", "delete_selection"]
"V" = ["select_mode", "extend_to_line_bounds"]
# Buffer Line
# Remap original key from swap window left righ to change buffer prev and next
# to access swap still available on window mode (Ctrl+w)
"H" = ":bprev"
"L" = ":bnext"

# Quick select up and down Normal Mode
"S-up" = "extend_line_up"
"S-down" = "extend_line_down"

[keys.select]
# Common
"esc" = ["collapse_selection", "normal_mode"]

# Yank Plus
"y" = ["yank", ":clipboard-yank", "collapse_selection"]
"Y" = ["extend_to_line_bounds", "yank", ":clipboard-yank", "collapse_selection"]

# Selection object around
"i" = "select_textobject_inner"
"a" = "select_textobject_around"

# Quick select up and down Normal Mode
"S-up" = "extend_line_up"
"S-down" = "extend_line_down"

# Move lines up/down in visual mode
"A-j" = [
  "extend_to_line_bounds",
  "delete_selection",
  "move_line_down",
  "paste_after",
  "select_mode",
]
"A-k" = [
  "extend_to_line_bounds",
  "delete_selection",
  "move_line_up",
  "paste_before",
  "select_mode",
]

[keys.insert]
"esc" = ["collapse_selection", "normal_mode"]
"C-s" = [":write", "normal_mode"]

[keys.normal.space]
"space" = "file_picker_in_current_buffer_directory"
"|" = "vsplit"
"-" = "hsplit"
"l" = ":toggle lsp.display-inlay-hints"
"q" = "wclose"
"," = "buffer_picker"
# Buffer Control
[keys.normal.space.b]
"a" = ":buffer-close-all"
"A" = ":buffer-close-all!"
"b" = "buffer_picker"
"d" = ":buffer-close"
"D" = ":buffer-close!"
"o" = ":buffer-close-others"
"O" = ":buffer-close-others!"
# Window Control is not working due to helix limitation
# [keys.normal.space.w]
# "=" = "resize_pane_equal"
# "+" = "resize_pane_increase"
# "-" = "resize_pane_decrease"
# ">" = "resize_pane_increase_horizontal"
# "<" = "resize_pane_decrease_horizontal"
